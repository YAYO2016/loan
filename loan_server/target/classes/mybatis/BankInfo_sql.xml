<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.loan.service.dao.BankInfoDao">
    <resultMap id="BankInfoMap" type="com.loan.service.model.BankInfo">
        <result property="bankId" column="bank_id"/>
        <result property="bankName" column="bank_name"/>
        <result property="bankDesc" column="bank_desc"/>
        <result property="createTime" column="create_time"/>
    </resultMap>

    <insert id="insert" parameterType="com.loan.service.model.BankInfo">
        INSERT INTO dict_bank (
        <trim suffixOverrides=",">
            bank_id,
            bank_name,
            bank_desc,
            create_time,
        </trim>
        )VALUES(
        <trim suffixOverrides=",">
            #{bankId},
            #{bankName},
            #{bankDesc},
            #{createTime},
        </trim>
        )
    </insert>

    <update id="updateByPk" parameterType="com.loan.service.model.BankInfo">
        update dict_bank
        <trim prefix="SET" suffixOverrides=",">
            <if test="bankId != null">bank_id = #{bankId},</if>
            <if test="bankName != null">bank_name = #{bankName},</if>
            <if test="bankDesc != null">bank_desc = #{bankDesc},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
        </trim>
        where bank_id = #{bankId}
    </update>

    <delete id="deleteByPrimaryKey" parameterType="string">
        delete from dict_bank where bank_id = #{bankId}
    </delete>

    <select id="getOneByPrimaryKey" parameterType="string" resultMap="BankInfoMap">
        select * from dict_bank where bank_id = #{bankId}
    </select>

    <select id="getAllItemsByQueryObject" resultMap="BankInfoMap" parameterType="com.loan.service.model.BankInfo">
        select * from dict_bank
        <include refid="select_where_clause"/>
        order by bank_name;
    </select>

    <sql id="select_where_clause">
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test="bankId != null">and bank_id = #{bankId}</if>
            <if test="bankName != null">and bank_name = #{bankName}</if>
            <if test="bankDesc != null">and bank_desc = #{bankDesc}</if>
            <if test="createTime != null">and create_time = #{createTime}</if>
        </trim>
    </sql>
</mapper>